services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-https://m2solutions.ai}
      - HUBSPOT_API_KEY=${HUBSPOT_API_KEY:-}
      - NEXT_PUBLIC_GA_ID=${NEXT_PUBLIC_GA_ID:-}
      - METRICS_TOKEN=${METRICS_TOKEN:-}
      - KV_REST_API_URL=${KV_REST_API_URL:-}
      - KV_REST_API_TOKEN=${KV_REST_API_TOKEN:-}
      - KV_REST_API_READ_ONLY_TOKEN=${KV_REST_API_READ_ONLY_TOKEN:-}
      - REDIS_URL=${REDIS_URL:-}
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
