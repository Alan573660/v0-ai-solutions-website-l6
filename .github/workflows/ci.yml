name: Deploy to Server

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Test SSH connection
      run: |
        ssh -v -o StrictHostKeyChecking=no \
        ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
        "echo 'Success!'; whoami; pwd"
    
    - name: Connect, deploy, build and start!
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e

          # Безопасно почистить мусорные контейнеры, образы и сети
          docker system prune -a -f
          
          # Отдельно почистить неиспользуемые тома
          docker volume prune -f
          
          # И build cache
          docker builder prune -a -f

          cd /home
          rm -rf /home/v0-ai-solutions-website-l6

          git clone git@github.com:Alan573660/v0-ai-solutions-website-l6.git

          cd v0-ai-solutions-website-l6

          touch .env
          bash -lc 'cat > .env << "ENVEOF"
            # =========================
            # Base Configuration
            # =========================
            NEXT_PUBLIC_BASE_URL=https://m2solutions.ai
            NEXT_PUBLIC_SITE_URL=https://m2solutions.ai
            
            # =========================
            # API Keys
            # =========================
            API_KEY=
            HUBSPOT_API_KEY=
            
            # =========================
            # Analytics
            # =========================
            NEXT_PUBLIC_GA_ID=
            NEXT_PUBLIC_YANDEX_METRICA_ID=
            
            # =========================
            # Redis (LOCAL, via docker-compose)
            # Не переопределяй сюда неправильные URL.
            # В compose уже стоит дефолт: redis://redis:6379
            # Если хочешь задать явно — раскомментируй строку ниже.
            # REDIS_URL=redis://redis:6379
            
            # Если нужно полностью вырубить Redis на время отладки:
            # DISABLE_REDIS=1
            # SILENCE_REDIS_ERRORS=1
            
            # =========================
            # Upstash KV / Redis (REST) — ИСПОЛЬЗУЙ ТОЛЬКО ЕСЛИ НЕ ИСПОЛЬЗУЕШЬ ЛОКАЛЬНЫЙ REDIS
            # Не смешивай с REDIS_URL. Для @upstash/redis нужны эти две переменные.
            # UPSTASH_REDIS_REST_URL=
            # UPSTASH_REDIS_REST_TOKEN=
            #
            # Старые KV_* оставь пустыми или удали.
            KV_URL=
            KV_REST_API_URL=
            KV_REST_API_TOKEN=
            KV_REST_API_READ_ONLY_TOKEN=
            
            # =========================
            # Database / Pools
            # =========================
            DB_POOL_MIN=2
            DB_POOL_MAX=10
            REDIS_POOL_MIN=2
            REDIS_POOL_MAX=10
            
            # =========================
            # Security & CORS
            # =========================
            ALLOWED_ORIGINS=https://m2solutions.ai,https://www.m2solutions.ai
            METRICS_TOKEN=
            
            # =========================
            # Rate Limiting
            # =========================
            RATE_LIMIT_MAX=100
            RATE_LIMIT_WINDOW_MS=60000
            
            # =========================
            # Internationalization
            # =========================
            DEFAULT_LOCALE=ru
            SUPPORTED_LOCALES=ru,en,es,de,fr,zh
            
            # =========================
            # Logging
            # =========================
            LOG_LEVEL=info
            
            # =========================
            # OpenTelemetry / Observability
            # =========================
            OTEL_SERVICE_NAME=ai-solutions-website
            OTEL_EXPORTER_OTLP_ENDPOINT=
            
            # =========================
            # Server Configuration
            # =========================
            PORT=3000
            WORKER_MODE=false
            
            # =========================
            # CI/CD
            # =========================
            CI=false
            ENVEOF'

          # Docker команды
          docker compose down || true
          docker compose -f docker-compose.prod.yml up --build -d
        EOF
